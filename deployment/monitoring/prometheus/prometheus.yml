# Prometheus 监控配置
# YOLOS系统实时性能监控

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'yolos-production'
    environment: 'production'

# 告警规则文件
rule_files:
  - "rules/*.yml"

# 告警管理器配置
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# 抓取配置
scrape_configs:
  # Prometheus自监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # YOLOS主应用监控
  - job_name: 'yolos-app'
    static_configs:
      - targets: ['yolos-app:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: yolos-app:8000

  # YOLOS Web界面监控
  - job_name: 'yolos-web'
    static_configs:
      - targets: ['yolos-web:8000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis监控
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics

  # PostgreSQL监控
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Nginx监控
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # 节点监控 (Node Exporter)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*)'
        target_label: __address__
        replacement: '${1}'
      - source_labels: [__address__]
        regex: '([^:]+)(?::\\d+)?'
        target_label: instance
        replacement: '${1}'

  # cAdvisor容器监控
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics
    honor_labels: true

  # Docker监控
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-exporter:9323']
    scrape_interval: 30s

  # GPU监控 (如果启用)
  - job_name: 'nvidia-gpu'
    static_configs:
      - targets: ['nvidia-gpu-exporter:9445']
    scrape_interval: 15s
    honor_labels: true

  # 自定义业务指标监控
  - job_name: 'yolos-business-metrics'
    static_configs:
      - targets: ['yolos-app:8000']
    scrape_interval: 10s
    metrics_path: /api/v1/metrics
    params:
      format: ['prometheus']
    honor_labels: true
    relabel_configs:
      - source_labels: [__name__]
        regex: 'yolos_(.+)'
        target_label: __name__
        replacement: '${1}'

  # API健康检查监控
  - job_name: 'yolos-health-check'
    static_configs:
      - targets: ['yolos-app:8000']
    scrape_interval: 30s
    metrics_path: /health
    params:
      format: ['prometheus']

  # 黑盒监控 (外部可访问性)
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://yolos-app:8000/health
        - http://yolos-web:8000/
        - http://nginx/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # 日志监控 (Loki)
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s

  # Grafana监控
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

# 远程写入配置 (可选)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'yolos_(.+)'
#         target_label: __name__
#         replacement: '${1}'

# 远程读取配置 (可选)
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# 存储配置
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Web配置
web:
  console.templates: /etc/prometheus/consoles
  console.libraries: /etc/prometheus/console_libraries
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /

# 查询配置
query:
  timeout: 2m
  max-concurrency: 20
  max-samples: 50000000
  lookback-delta: 5m